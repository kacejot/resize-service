// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kacejot/resize-service/pkg/resize (interfaces: Resize)

// Package resize_mock is a generated GoMock package.
package resize_mock

import (
	gomock "github.com/golang/mock/gomock"
	resize "github.com/kacejot/resize-service/pkg/resize"
	reflect "reflect"
)

// MockResize is a mock of Resize interface
type MockResize struct {
	ctrl     *gomock.Controller
	recorder *MockResizeMockRecorder
}

// MockResizeMockRecorder is the mock recorder for MockResize
type MockResizeMockRecorder struct {
	mock *MockResize
}

// NewMockResize creates a new mock instance
func NewMockResize(ctrl *gomock.Controller) *MockResize {
	mock := &MockResize{ctrl: ctrl}
	mock.recorder = &MockResizeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockResize) EXPECT() *MockResizeMockRecorder {
	return m.recorder
}

// Resize mocks base method
func (m *MockResize) Resize(arg0 []byte, arg1, arg2 int) (resize.Result, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Resize", arg0, arg1, arg2)
	ret0, _ := ret[0].(resize.Result)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Resize indicates an expected call of Resize
func (mr *MockResizeMockRecorder) Resize(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Resize", reflect.TypeOf((*MockResize)(nil).Resize), arg0, arg1, arg2)
}
